swagger: '2.0'
info:
  description: |
    send, manage and share your blog
  version: 1.0.0
  title: A Blog System
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
- name: Blog
  description: Operations about blog
- name: User
  description: Operations about user
- name: Comment
  description: Operations about comment
- name: Tag
  description: Operations about tags
  
paths:
  /comment/{BlogID}:
    post:
      tags:
      - Comment
      summary: Post some comments
      operationId: postComment
      produces:
      - application/json
      parameters:
      - name: BlogID
        in: path
        description: Blog id to addTag
        required: true
        type: string
      - in: body
        name: body
        description: Create a new comment
        required: true
        schema:
          type: object
          properties:
            ownName:
              type: string
              example: "pmlpml"
            content:
              type: string
              example: "Thanks"
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Response'
      security:
      - token: []
    get:
      tags:
        - Comment
      summary: Get the comment by its BlogID
      operationId: getCommentByBlogId
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: BlogID
        in: path
        description: Blog's ID to get comment
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              state:
                type: boolean
              response:
                $ref: '#/definitions/Comment'
  /tag/{BlogID}:
    get:
      tags:
        - Tag
      summary: Get the tag by its BlogID
      operationId: getTagByBlogId
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: BlogID
        in: path
        description: Blog's ID
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              state:
                type: boolean
              response:
                $ref: '#/definitions/Tag'
    post:
      tags:
      - Tag
      summary: Post some tags
      operationId: postTag
      produces:
      - application/json
      parameters:
      - name: BlogID
        in: path
        description: Blog id to addTag
        required: true
        type: string
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          type: object
          properties:
            content:
              type: string
              example: "study life"
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Response'
      security:
      - token: []
    
  /user/signup:
    post:
      tags:
      - User
      summary: Create user
      operationId: createUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          type: object
          properties:
            ID:
              type: string
              example: "32183921@qq.com"
            Name:
              type: string
              example: "PmlPml"
            Password:
              type: string
              example: "123456加密后的密文"
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Response'
  /user/login:
    post:
      tags:
      - User
      summary: Logs user into the system
      operationId: loginUser
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: identification
        required: true
        schema:
          type: object
          properties:
            ID:
              type: string
              example: "32183921@qq.com"
            Password:
              type: string
              example: "123456加密后的密文"
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Response'
  /user/logout:
    get:
      tags:
      - User
      summary: Logs out current logged in user session
      operationId: logoutUser
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Response'
  /user/{ID}/info:
    get:
      tags:
      - User
      summary: Get user by user ID
      operationId: getUserByID
      produces:
      - application/json
      - application/xml
      parameters:
      - name: ID
        in: path
        description: The name that needs to be fetched. Use user1 for testing. 
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              state:
                description: true for success and false for failure
                type: boolean
              response:
                $ref: '#/definitions/UserInfo'
       
  /blog:
    post:
      tags:
      - Blog
      summary: Add a new blog
      operationId: addBlog
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            Title:
              type: string
            Abstract:
              type: string
            Content:
              type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Response'
      security:
      - token: []
  /blog/all:
    get:
      tags:
      - Blog
      summary: Get all public blogs
      operationId: getBlogs
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              state:
                type: boolean
              response:
                type: array
                items:
                   $ref: '#/definitions/Blog'
  /blog/{ID}/all:
    get:
      tags:
      - Blog
      summary: Get all blogs of someone
      operationId: getBlogsByID
      produces:
      - application/json
      parameters:
      - name: ID
        in: path
        description: UserID
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              state:
                type: boolean
              response:
                type: array
                items:
                   $ref: '#/definitions/Blog'
  /blog/{BlogID}:
    get:
      tags:
        - Blog
      summary: Get the blog by its BlogID
      operationId: getBlogByBlogID
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: BlogID
        in: path
        description: Blog's ID
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              state:
                type: boolean
              response:
                $ref: '#/definitions/Blog'
    delete:
      tags:
      - Blog
      summary: Delete a Blog
      operationId: deleteBlog
      produces:
      - application/json
      parameters:
      - name: BlogID
        in: path
        description: Blog id to delete
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Response'
      security:
      - token: []

securityDefinitions:
  token:
    type: apiKey
    name: token
    in: header
definitions:
  Tag:
    type: object
    properties:
      BlogID:
        description: The ID of the Blog
        type: string
        example: "c113456181"
      content:
        description: all of the tags
        type: string
        example: "study life"
  Comment:
    type: object
    properties:
      BlogId:
        description: The ID of the Blog
        type: string
        example: "c113456181"
      ownName:
        description: The name of the one who comments
        type: string
        example: "pmlpml"
      commentTime:
        description: The time of the comment
        type: number
        example: 1608107600
      content:
        description: The content of the comment
        type: string
        example: "Thanks!"
  Response:
    type: object
    properties:
      state:
        description: true for success and false for failure
        type: boolean
        example: true
      response:
        description: the return message of the interfaces
        type: string
        example: 'success'
  UserInfo:
    type: object
    properties:
      ID:
        type: string
        example: "32183921@qq.com"
      Name:
        type: string
        example: "PmlPml"
      # Password:
      #   type: string
      #   example: "123456加密后的密文"
      Bio:
        type: string
        example: "好好学习天天向上"
      Level:
        type: number
        example: 1
  Blog:
    type: object
    required:
    - title
    properties:
      BlogID:
        type: string
        example: 'c113456181'
      AuthorID:
        type: string
        example: 'u010389391'
      AuthorName:
        type: string 
        example: '作者'
      CreateTime:
        type: number
        example: 1608107600
      Title:
        type: string
        example: '标题党'
      Abstract:
        type: string
        example: '摘要'
      Content:
        type: string
        example: '这是一段博客内容'
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
schemes:
 - https
 - http
# basePath: /1.0.0
# Added by API Auto Mocking Plugin
basePath: /Esual/blog/1.0.0