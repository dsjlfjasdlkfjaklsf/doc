{
  "swagger": "2.0",
  "info": {
    "description": "send, manage and share your blog\n",
    "version": "1.0.0",
    "title": "A Blog System",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/Esual/blog/1.0.0",
  "tags": [
    {
      "name": "Blog",
      "description": "Operations about blog"
    },
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Comment",
      "description": "Operations about comment"
    },
    {
      "name": "Tag",
      "description": "Operations about tags"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/comment/{BlogID}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "Get the comment by its BlogID",
        "operationId": "getCommentByBlogId",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BlogID",
            "in": "path",
            "description": "Blog's ID to get comment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/inline_response_200"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "Post some comments",
        "operationId": "postComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BlogID",
            "in": "path",
            "description": "Blog id to addTag",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create a new comment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/tag/{BlogID}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get the tag by its BlogID",
        "operationId": "getTagByBlogId",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BlogID",
            "in": "path",
            "description": "Blog's ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/inline_response_200_1"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Post some tags",
        "operationId": "postTag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BlogID",
            "in": "path",
            "description": "Blog id to addTag",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/user/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "identification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        }
      }
    },
    "/user/{ID}/info": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by user ID",
        "operationId": "getUserByID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          }
        }
      }
    },
    "/blog": {
      "post": {
        "tags": [
          "Blog"
        ],
        "summary": "Add a new blog",
        "operationId": "addBlog",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/blog/all": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get all public blogs",
        "operationId": "getBlogs",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/inline_response_200_3"
            }
          }
        }
      }
    },
    "/blog/{ID}/all": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get all blogs of someone",
        "operationId": "getBlogsByID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "UserID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/inline_response_200_3"
            }
          }
        }
      }
    },
    "/blog/{BlogID}": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get the blog by its BlogID",
        "operationId": "getBlogByBlogID",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BlogID",
            "in": "path",
            "description": "Blog's ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/inline_response_200_4"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Blog"
        ],
        "summary": "Delete a Blog",
        "operationId": "deleteBlog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "BlogID",
            "in": "path",
            "description": "Blog id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "name": "token",
      "in": "header"
    }
  },
  "definitions": {
    "Tag": {
      "type": "object",
      "properties": {
        "BlogID": {
          "type": "string",
          "example": "c113456181",
          "description": "The ID of the Blog"
        },
        "content": {
          "type": "string",
          "example": "study life",
          "description": "all of the tags"
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "BlogId": {
          "type": "string",
          "example": "c113456181",
          "description": "The ID of the Blog"
        },
        "ownName": {
          "type": "string",
          "example": "pmlpml",
          "description": "The name of the one who comments"
        },
        "commentTime": {
          "type": "number",
          "example": 1608107600,
          "description": "The time of the comment"
        },
        "content": {
          "type": "string",
          "example": "Thanks!",
          "description": "The content of the comment"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "state": {
          "type": "boolean",
          "example": true,
          "description": "true for success and false for failure"
        },
        "response": {
          "type": "string",
          "example": "success",
          "description": "the return message of the interfaces"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "example": "32183921@qq.com"
        },
        "Name": {
          "type": "string",
          "example": "PmlPml"
        },
        "Bio": {
          "type": "string",
          "example": "好好学习天天向上"
        },
        "Level": {
          "type": "number",
          "example": 1
        }
      }
    },
    "Blog": {
      "type": "object",
      "properties": {
        "BlogID": {
          "type": "string",
          "example": "c113456181"
        },
        "AuthorID": {
          "type": "string",
          "example": "u010389391"
        },
        "AuthorName": {
          "type": "string",
          "example": "作者"
        },
        "CreateTime": {
          "type": "number",
          "example": 1608107600
        },
        "Title": {
          "type": "string",
          "example": "标题党"
        },
        "Abstract": {
          "type": "string",
          "example": "摘要"
        },
        "Content": {
          "type": "string",
          "example": "这是一段博客内容"
        }
      }
    },
    "inline_response_200": {
      "type": "object",
      "properties": {
        "state": {
          "type": "boolean"
        },
        "response": {
          "$ref": "#/definitions/Comment"
        }
      }
    },
    "body": {
      "type": "object",
      "properties": {
        "ownName": {
          "type": "string",
          "example": "pmlpml"
        },
        "content": {
          "type": "string",
          "example": "Thanks"
        }
      }
    },
    "inline_response_200_1": {
      "type": "object",
      "properties": {
        "state": {
          "type": "boolean"
        },
        "response": {
          "$ref": "#/definitions/Tag"
        }
      }
    },
    "body_1": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "example": "study life"
        }
      }
    },
    "body_2": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "example": "32183921@qq.com"
        },
        "Name": {
          "type": "string",
          "example": "PmlPml"
        },
        "Password": {
          "type": "string",
          "example": "123456加密后的密文"
        }
      }
    },
    "body_3": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "example": "32183921@qq.com"
        },
        "Password": {
          "type": "string",
          "example": "123456加密后的密文"
        }
      }
    },
    "inline_response_200_2": {
      "type": "object",
      "properties": {
        "state": {
          "type": "boolean",
          "description": "true for success and false for failure"
        },
        "response": {
          "$ref": "#/definitions/UserInfo"
        }
      }
    },
    "body_4": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Abstract": {
          "type": "string"
        },
        "Content": {
          "type": "string"
        }
      }
    },
    "inline_response_200_3": {
      "type": "object",
      "properties": {
        "state": {
          "type": "boolean"
        },
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Blog"
          }
        }
      }
    },
    "inline_response_200_4": {
      "type": "object",
      "properties": {
        "state": {
          "type": "boolean"
        },
        "response": {
          "$ref": "#/definitions/Blog"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}